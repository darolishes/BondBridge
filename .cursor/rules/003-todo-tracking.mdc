# Todo-Tracking mit Epics, Stories und Tasks

## Kontext
- Beim Tracking und Management von Aufgaben im BondBridge-Projekt
- Bei der Planung und Organisation neuer Features und Epics
- Bei Statusberichten und Fortschrittsaktualisierungen
- Bei der Integration neuer Features in die bestehende Produktstruktur

## Anforderungen
- Verwende die hierarchische Struktur der `todo.md`: Epics > Stories > Tasks
- Nutze ausschließlich die definierten Emoji-Statusmarker einheitlich durch das Dokument
- Verknüpfe Tasks und Stories mit relevanten Dateien in der `memory-bank/` für vollständigen Kontext
- Aktualisiere bei Statusänderungen stets den Fortschritt (%) aller übergeordneten Elemente
- Priorisiere MVP-Features und verschiebe nicht-kritische Elemente in die Post-MVP-Sektion
- Verwende konkrete Beschreibungen bei Tasks zur besseren Messbarkeit des Fortschritts

## Struktur der todo.md
- **Epics**: Größere Funktionsbereiche mit Gesamtstatus, Verantwortlichkeit und Deadline
- **Stories**: Einzelne Features oder zusammenhängende Anforderungen mit User-Story-Referenz
- **Tasks**: Konkrete, atomare Aufgaben mit präzisen Beschreibungen und eigenem Status

## Emoji-Status-System
Die folgenden Emojis werden zur eindeutigen Markierung des Status verwendet:
- 📋 Todo / Nicht begonnen - Aufgabe ist definiert, aber noch nicht gestartet
- 🏗️ In Bearbeitung - Aufgabe wird aktiv entwickelt (mit Fortschrittsangabe)
- ✅ Abgeschlossen - Aufgabe ist vollständig implementiert und getestet
- ⏸️ Pausiert - Vorübergehend zurückgestellt (mit Grund)
- 🚫 Blockiert - Kann nicht fortgesetzt werden (mit Abhängigkeit oder Grund)
- 🔄 Review - Implementierung abgeschlossen, benötigt Überprüfung
- 🔥 Hohe Priorität - Kritisch für das unmittelbare Projektziel
- 🔽 Niedrige Priorität - Kann bei Bedarf verschoben werden
- 📆 Zukünftige Version - Explizit für Post-MVP geplant

## Beispiel
<example>
## 🏗️ Conversation Cards (MVP)

> Implementierung der grundlegenden Kartenansicht und -interaktion
> **Referenz:** `memory-bank/implementationPlan.md`

**Status:** 🏗️ In Entwicklung (30%)
**Verantwortlich:** UI-Team
**Deadline:** 2025-04-15

### Stories

- 🏗️ **[US-101] Einfache Card-Komponente**
  - Referenz: `memory-bank/userStories.md` (US-101)
  - Beschreibung: Darstellung von Gesprächskarten mit grundlegender Struktur
  - Abhängigkeiten: Keine

  #### Tasks
  - ✅ Komponenten-Gerüst erstellen
  - 🏗️ Kategorie-Indikator implementieren (50%)
  - 📋 Styles gemäß `memory-bank/uiPrinciples.md` anwenden
  - 🔥 Responsive Anpassung für verschiedene Bildschirmgrößen

- 📋 **[US-102] Card-Navigation**
  - Referenz: `memory-bank/userStories.md` (US-102)
  - Blockiert durch: Fertigstellung der Card-Komponente

  #### Tasks
  - 📋 Vor/Zurück-Buttons mit Tap-Erkennung
  - 📋 Grundlegende Swipe-Geste mit Animation
  - 📋 Navigation-State für Kartenindex
</example>

## Kritische Regeln
- Füge neue Elemente immer in der korrekten hierarchischen Struktur hinzu
- Status sollte durch eindeutige Emojis gekennzeichnet sein, nicht durch Text-Beschreibungen
- Inkonsistente oder doppelte Status-Markierungen sind zu vermeiden
- Aktualisiere immer den Status und Fortschritt aller übergeordneten Elemente
- Trenne klar zwischen MVP-Features und Post-MVP-Erweiterungen
- Füge bei blockierten Tasks explizite Abhängigkeiten oder Gründe hinzu
- Verwende aussagekräftige Namen und Beschreibungen für alle Elemente

## Benachrichtigungen zu Status-Änderungen
Bei signifikanten Status-Änderungen (z.B. Blockierung oder Abschluss) sollte dies in einem Fortschrittsbericht vermerkt werden, der folgende Informationen enthält:
- Welche Elemente wurden geändert
- Aktueller Gesamtfortschritt
- Auswirkungen auf andere abhängige Tasks
- Nächste kritische Schritte